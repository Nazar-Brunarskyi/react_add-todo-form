{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","additionalFunction/getUser.ts","App.tsx","additionalFunction/getTheLargestId.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","TodoList","todos","map","username","userId","getUser","users","find","App","useState","setTodos","setUserId","setTitele","isTitleError","setTitleError","isUserError","setUserError","useEffect","editedTodos","todosFromServer","usersFromServer","onSubmit","event","preventDefault","isTitleCorrect","isUserCorrect","isDataCorrect","newTodo","list","sort","a","b","currentList","type","placeholder","value","onChange","currentTarget","disabled","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aea60998.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo subtitle\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title title is-4\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }: Props) => (\n  <section className=\"TodoList\">\n    {\n      todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })\n    }\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../types/user';\n\nexport function getUser(users: User[], id: number) : User | null {\n  return users.find(user => user.id === id) || null;\n}\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/todo';\nimport { getTheLargestId } from './additionalFunction/getTheLargestId';\nimport { getUser } from './additionalFunction/getUser';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitele] = useState('');\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n\n  useEffect(() => {\n    const editedTodos = todosFromServer.map(todo => ({\n      ...todo,\n      user: getUser(usersFromServer, todo.userId),\n    }));\n\n    setTodos(editedTodos);\n  }, []);\n\n  const isDataCorrect = () => {\n    const isTitleCorrect = title !== '';\n    const isUserCorrect = userId !== 0;\n\n    setTitleError(!isTitleCorrect);\n    setUserError(!isUserCorrect);\n\n    return isTitleCorrect && isUserCorrect;\n  };\n\n  const addTodo = (\n    event: React.FormEvent<HTMLFormElement>,\n  ): void => {\n    event.preventDefault();\n\n    if (isDataCorrect()) {\n      const newTodo: Todo = {\n        id: getTheLargestId(todos) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(usersFromServer, userId),\n      };\n\n      setTodos(currentList => [...currentList, newTodo]);\n      setUserId(0);\n      setTitele('');\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitele(event.currentTarget.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.currentTarget.value);\n    setUserError(false);\n  };\n\n  return (\n    <div\n      className=\"\n        App\n        is-flex\n        is-flex-direction-column\n        is-align-items-center\n      \"\n    >\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        onSubmit={addTodo}\n        className=\"form\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n            className=\"input is-medium\"\n          />\n          {\n            isTitleError\n            && (<span className=\"error\">Please enter a title</span>)\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n            className=\"select is-medium\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(person => (\n              <option\n                key={person.id}\n                value={person.id}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n\n          {\n            isUserError\n            && (<span className=\"error\">Please choose a user</span>)\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-success\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { Todo } from '../types/todo';\n\nexport function getTheLargestId(list: Todo[]): number {\n  return list\n    .map(todo => todo.id)\n    .sort((a, b) => b - a)[0];\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}